# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

########################################################
## Bootstrap TMUX                                      #
########################################################

export ZSH_TMUX_AUTOSTART=true
export NVM_LAZY_LOAD=true
export NVM_AUTO_USE=true

########################################################
## Load #
########################################################

function add_completion_dirs_to_fpath() {
  setopt NULL_GLOB
  readonly completions=($DOTFILES_DIR/config/*/completions/_*.zsh)
  unsetopt NULL_GLOB

  for completion_file in $completions; do
    completion_dir=$(dirname $completion_file)
    [ ! -z "$DEBUG_SOURCING" ] && echo "$(gdate +%s/%N) (completions): Adding $completion_dir to fpath"
    fpath=($completion_dir $fpath)
  done
}
add_completion_dirs_to_fpath

#######################################################
# Plugin environment variables                        #
#######################################################


#######################################################
# Load plugins                                        #
#######################################################

if [ ! -f "$ZSH_DIR/load-plugins.sh" ]; then
  echo "load-plugins.sh not found. Installing with antibody"
  antibody bundle < "$ZSH_DIR/plugins.txt" > "$ZSH_DIR/load-plugins.sh"
fi

autoload -Uz compinit
compinit

source "$ZSH_DIR/load-plugins.sh"

#######################################################
# Auto-sourcing                                       #
#######################################################

source_shellfiles() {
  local private_env_file
  private_env_file="$HOME/.env.private.zsh"

  if [ -f "$private_env_file" ]; then
    [ ! -z "$DEBUG_SOURCING" ] && echo "$(gdate +%s/%N): Sourcing $private_env_file"
    source "$private_env_file"
  fi

  setopt null_glob
  setopt +o nomatch

  readonly initfiles=($DOTFILES_DIR/config/zshell/init/*.{zsh,sh})

  for init_file in $initfiles; do
    [ ! -z "$DEBUG_SOURCING" ] && echo "$(gdate +%s/%N) (init): Sourcing $init_file"
    source "$init_file"
  done

  readonly envfiles=($DOTFILES_DIR/config/*/env.{zsh,sh})

  for env_file in $envfiles; do
    [ ! -z "$DEBUG_SOURCING" ] && echo "$(gdate +%s/%N) (env): Sourcing $env_file"
    source "$env_file"
  done

  readonly shellfiles=($DOTFILES_DIR/config/*/*.{zsh,sh})

  for shell_file in ${${shellfiles:#*/env.zsh}}; do
    [  ! -z "$DEBUG_SOURCING" ] && echo "$(gdate +%s/%N) (shell): Sourcing $shell_file"
    source "$shell_file"
  done

  setopt -o nomatch
  unsetopt null_glob
}
source_shellfiles

#####################################################
# Configure shell integrations                      #
#####################################################

# export NODE_OPTIONS='--require ndb/preload.js'
# export NODE_PATH=':/Users/wainwb01/.config/yarn/global/node_modules/ndb/lib/preload'
# export NDD_IPC='/var/folders/9b/kdn1d1k13v5cbmdmxbj9gmjn5f9pm5/T/node-ndb.28842.sock'

# Adds fzf shell bindings, such as Ctrl-R replacement
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#####################################################
# Zshell configuration                              #
#####################################################

HISTFILE=~/.zsh_history

zstyle ':completion:*' menu select

# Allow changing directories without `cd`
setopt autocd

export SAVEHIST=10000
export HISTSIZE=10000

# Dont overwrite history
setopt append_history

# Also record time and duration of commands.
setopt extended_history

# Immediately append to the history file, not just when a term is killed
setopt inc_append_history

# Share history between multiple shells
setopt share_history

# Clear duplicates when trimming internal hist.
setopt hist_expire_dups_first

# Dont display duplicates during searches.
setopt hist_find_no_dups

# Ignore consecutive duplicates.
setopt hist_ignore_dups

# Remember only one unique copy of the command.
setopt hist_ignore_all_dups

# Remove superfluous blanks.
setopt hist_reduce_blanks

# Omit older commands in favor of newer ones.
setopt hist_save_no_dups

# Ignore commands that start with space.
setopt hist_ignore_space

# Load colours into shell variables https://github.com/ninrod/dotfiles/issues/134
autoload -U colors
colors

# Evaluate colors in prompt skin
setopt PROMPT_SUBST
export PATH="/usr/local/sbin:$PATH"


########################################################
## Misc setup                                          #
########################################################
eval "$(fasd --init posix-alias zsh-hook)"

fasd_cache="$HOME/.fasd-init-bash"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias zsh-hook >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

zle -N aws-switch-profile-fzf
bindkey '^S' aws-switch-profile-fzf

# export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

export REQUESTS_CA_BUNDLE="$HOME/.mac-ca-roots"

# export NVM_NODEJS_ORG_MIRROR=http://nodejs.org/dist
export PATH="/usr/local/opt/curl/bin:$PATH"


eval "$(pyenv init --path)"
eval "$(pyenv init -)"
export PATH="/usr/local/opt/openjdk/bin:$PATH"
